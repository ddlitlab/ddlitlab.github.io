Feedback Julia Powerpoint:

allgemein: immer hilfreich, auch das mobile Design mitzudenken; insgesamt alle gaps nochmal anschauen

- Folie 2: main {row-gap: 8rem}; margins / paddings vermeiden
- Folie 3: beides über grid-lehre-navi umgesetzt (_home:23)
- Folie 4: habe ich umgesetzt, ich persönlich finde das padding wirkt jetzt etwas komisch (ist nicht mehr bündig mit dem grid) (_projekte:3)
- Folie 5: die Schrift wirkt sehr groß, eher umständlich alles noch zu ändern, erstmal klären, wie groß die Schrift soll und ob es wirklich so sein soll (_big-numbers)
- Folie 6: lightbulb-empty gibt es nicht; soll die Rakete so umgesetzt werden, dass nur ein Teil zu sehen ist?; hast du da auch was am Text weggenommen?
- Folie 7: was ist mit dem Text gemeint? hast du daran was geändert?
- Folie 8: passt das so mit den Abständen?


gKI-Community:
- warum neue, eigene Kacheln? Können wir da auch andere Kacheln recyclen? Wohin sollen die verlinken?
- Studierende im Umgang mit KI stärken: was soll das für ein Link sein?
- wollen wir wirklich überall Zahlen drin haben? mehr als xxx so und so
- Präsens oder Präteritum?









Unsortiert

- Timeline richtig anpassen
- Datenwelten Hero auf Mobile ist noch nicht gut

- Projekttitel vereinheitlichen (title_project ist der Projekt-Name, das andere eher der Titel der Präsentation)
- Vergangene Veranstaltungen GKI-Community Grid richtig machen
- Timeline-Texte nochmal durchgehen
- datenwelten-event grids überarbeiten, list elemente statt divs



Roadmap:
- page layouts 
- aufräumen
- All Translations
- animations desktop view
- responsiveness: tablet view - mobile view




Loading Optimization:
===============================
1. 🔤 Implement font preloading for critical fonts
2. 📱 Enable CSS/JS minification in production
3. 🖼️  Convert large images to WebP format
4. 🚀 Add resource hints (preload, prefetch)
5. 📦 Implement CSS critical path optimization
6. 🗜️  Enable Brotli/Gzip compression on server

🎯 Quick Wins Applied:
======================
✅ Font preloading partial created
✅ Optimized font loading (removed unused weights)
✅ CSS async loading implementation
✅ Lazy loading for images
✅ JavaScript optimization with modern techniques



💡 Optimization Strategies:
-------------------------
1. Format Optimization:
   • Convert large PNGs to JPEGs (if no transparency needed)
   • Use WebP format for modern browsers
   • Keep SVGs for icons and simple graphics

2. Responsive Images:
   • Implement srcset for different screen sizes
   • Use Hugo's image processing features
   • Create multiple sizes: 320w, 768w, 1024w, 1920w

3. Lazy Loading:
   • Add loading='lazy' to below-the-fold images
   • Implement intersection observer for advanced lazy loading

4. Hero Image Optimization:
   • Preload critical hero images
   • Use appropriate formats and sizes
   • Consider CSS background-image for hero sections

🛠️  Hugo Image Processing Example:
--------------------------------
<!-- Example of optimized image usage in Hugo templates -->
{{ $image := resources.Get "images/hero.jpg" }}
{{ $small := $image.Resize "320x" }}
{{ $medium := $image.Resize "768x" }}
{{ $large := $image.Resize "1024x" }}
{{ $webp := $image.Resize "1024x webp" }}

<picture>
  <source srcset="{{ $webp.RelPermalink }}" type="image/webp">
  <img src="{{ $large.RelPermalink }}"
       srcset="{{ $small.RelPermalink }} 320w,
               {{ $medium.RelPermalink }} 768w,
               {{ $large.RelPermalink }} 1024w"
       sizes="(max-width: 768px) 100vw, 
              (max-width: 1024px) 50vw, 
              33vw"
       alt="Description"
       loading="lazy">
</picture>


Nach Abschluss der Webseite
- Gaetano auf die studentischen Forschungsgruppen hinweisen




Font-Sizes Index:

hero-title 3rem
hero-subtitle 1.3rem
section-title 2rem
section-subtitle 1.3rem
navigation-cards 1.5rem
goals-section 1.3rem
text 1rem